/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package app.view.component.vehicle;

import app.model.Vehicle;
import app.service.VehicleService;
import app.view.Main;
import app.view.component.order.DialogImportOrderForm;
import app.view.model.TableVehicleModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.List;
import java.util.concurrent.atomic.AtomicReference;
import javax.swing.JOptionPane;

/**
 *
 * @author kiendv
 */
public class VehicleManagement extends javax.swing.JPanel {

    VehicleService service;
    TableVehicleModel tableModel = new TableVehicleModel();

    /**
     * Creates new form VehicleManagement
     */
    public VehicleManagement() {
        initComponents();
        service = new VehicleService();
        setCurpage(1);
        fillPage();
    }
    AtomicReference<Integer> totalpage = new AtomicReference<Integer>(0);
    int curpage = 1;
    String search = "";

    public void setTotalpage(Integer totalpage) {
        this.totalpage.set(totalpage);
        fillPage();
    }

    public void setCurpage(int curpage) {
        this.curpage = curpage;
        fillData(curpage);
    }

    private void fillData(int page) {
        String pagingsql = "";
        if (search.equals("")) {
            pagingsql = service.BuildPagingSql(service.getTableName(), null, Main.PerPage, page, totalpage);
        } else {
            pagingsql = service.BuildPagingSql(service.getTableName(), service.getConditionSearch(search), Main.PerPage, page, totalpage);
        }
        List<Vehicle> lst = service.executeQuery(pagingsql);
        tableModel.setData(lst);
        tableVehicle.setModel(tableModel);
        tableVehicle.revalidate();
        tableVehicle.repaint();
    }

    private void fillPage() {
        comboVehicle.removeAllItems();
        for (int i = 1; i <= totalpage.get(); i++) {
            comboVehicle.addItem(i);
        }
        comboVehicle.setSelectedItem(curpage);
        comboVehicle.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent ie) {
                Object temppage = comboVehicle.getSelectedItem();
                if (temppage != null) {
                    setCurpage((Integer) temppage);
                }
            }
        });
        comboVehicle.revalidate();
        comboVehicle.repaint();
    }

    public boolean isNumeric(String str) {
        try {
            double d = Double.parseDouble(str);
        } catch (NumberFormatException nfe) {
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableVehicle = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lbCur = new javax.swing.JLabel();
        comboVehicle = new javax.swing.JComboBox();
        txtKeyword = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        tableVehicle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableVehicle);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 30));
        jPanel1.setLayout(new java.awt.FlowLayout(0));

        lbCur.setText(".");
        jPanel1.add(lbCur);

        comboVehicle.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboVehicleItemStateChanged(evt);
            }
        });
        comboVehicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboVehicleActionPerformed(evt);
            }
        });
        jPanel1.add(comboVehicle);

        txtKeyword.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel1.add(txtKeyword);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearch);

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jPanel1.add(btnNew);

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel1.add(btnEdit);

        jButton1.setText("Import");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        jPanel1.add(btnRefresh);

        add(jPanel1, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void comboVehicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboVehicleActionPerformed
    }//GEN-LAST:event_comboVehicleActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        callDialogVehicle(false);
    }//GEN-LAST:event_btnNewActionPerformed
    public Vehicle getSelectedVehicle() {
        int index = tableVehicle.getSelectedRow();
        if (index == -1) {
            return null;
        } else {
            return ((TableVehicleModel) tableVehicle.getModel()).getData(index);
        }
    }

    public Object getSelectedObject() {
        return getSelectedVehicle();
    }

    public void callDialogVehicle(boolean isedit) {
        Vehicle v = getSelectedVehicle();
        if (isedit && v == null) {
            JOptionPane.showMessageDialog(this, "Not selected a row.");
            return;
        }
        CreateVehicleDialog creater = new CreateVehicleDialog(null, true);
        creater.setLocationRelativeTo(null);
        creater.setEditMode(isedit);
        if (isedit) {
            creater.setModel(v);
        }
        creater.setVisible(true);
    }
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        callDialogVehicle(true);
    }//GEN-LAST:event_btnEditActionPerformed

    private void comboVehicleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboVehicleItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_comboVehicleItemStateChanged

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        search = txtKeyword.getText();
        fillData(1);
        fillPage();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        search = "";
        txtKeyword.setText("");
        fillData(1);
        fillPage();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Vehicle v = getSelectedVehicle();
        if (v == null) {
            JOptionPane.showMessageDialog(this, "Select a row to perform this action!");
            return;
        }
        DialogImportOrderForm dialog = new DialogImportOrderForm(null, true);
        dialog.setLocationRelativeTo(null);
        dialog.setEditMode(false);
        dialog.setModel(v);
        dialog.setVisible(true);
        dialog.setListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                btnRefreshActionPerformed(ae);
            }
        });
    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox comboVehicle;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCur;
    private javax.swing.JTable tableVehicle;
    private javax.swing.JTextField txtKeyword;
    // End of variables declaration//GEN-END:variables
}
